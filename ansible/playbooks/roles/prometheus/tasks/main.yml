---
- name: Ensure Docker is installed
  include_role:
    name: docker

- name: Stop any existing Prometheus processes
  shell: |
    pkill -f prometheus || true
    systemctl stop prometheus 2>/dev/null || true
    docker rm -f prometheus 2>/dev/null || true
    fuser -k 9090/tcp 2>/dev/null || true
  ignore_errors: yes

- name: Wait for port to be free
  wait_for:
    host: localhost
    port: 9090
    state: stopped
    timeout: 10
  ignore_errors: yes

- name: Create directories for Prometheus
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/prometheus
    - /opt/prometheus/data

- name: Create Prometheus configuration
  copy:
    dest: /opt/prometheus/prometheus.yml
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'node_exporter'
          static_configs:
            - targets: ['localhost:9100']  # Changed to localhost first
              labels:
                environment: 'monitoring'

        - job_name: 'banking-app'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['test-server:8080', 'prod-server:8080']
              labels:
                environment: 'production'
                app: 'banking-app'

- name: Run Prometheus container with simpler config
  docker_container:
    name: prometheus
    image: prom/prometheus:latest
    state: started
    restart_policy: always
    ports:
      - "9090:9090"
    volumes:
      - "/opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "/opt/prometheus/data:/prometheus"
    command: --config.file=/etc/prometheus/prometheus.yml --web.listen-address=0.0.0.0:9090

- name: Wait for Prometheus to start
  wait_for:
    port: 9090
    delay: 10
    timeout: 120

- name: Check container logs
  command: docker logs prometheus
  register: prometheus_logs
  changed_when: false

- name: Show Prometheus logs
  debug:
    var: prometheus_logs.stdout

- name: Check container status
  command: docker inspect prometheus --format='{{.State.Status}}'
  register: container_status
  changed_when: false

- name: Show container status
  debug:
    var: container_status.stdout

- name: Verify Prometheus is accessible (simpler check)
  uri:
    url: http://localhost:9090/-/healthy
    method: GET
    status_code: 200
  register: health_check
  until: health_check.status == 200
  retries: 10
  delay: 5

- name: Show Prometheus status
  debug:
    msg: "Prometheus container started successfully. Access at: http://{{ inventory_hostname }}:9090"
